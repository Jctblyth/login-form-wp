{"version":3,"sources":["logo.svg","components/input/Input.jsx","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","htmlFor","id","title","type","value","onChange","Button","onClick","name","App","useState","email","setEmail","password","setPassword","console","log","onSubmit","e","preventDefault","alert","target","is","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,I,YCYAA,EAVD,SAAAC,GACV,OACI,sBAAKC,UAAW,QAAhB,UACA,uBAAOC,QAASF,EAAMG,GAAtB,SAA2BH,EAAMI,QACjC,uBAAOC,KAAML,EAAMK,KAAMF,GAAIH,EAAMG,GAAIG,MAAON,EAAMM,MAAOC,SAAUP,EAAMO,eCMpEC,G,MARA,SAACR,GACZ,OACI,wBAAQK,KAAML,EAAMK,MAAQ,SAAUJ,UAAU,SAASQ,QAAST,EAAMS,QAAxE,SACKT,EAAMU,SC2BJC,MA3Bf,WACE,MAA0BC,mBAAU,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAU,IAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KAWA,OADAC,QAAQC,IAAIL,EAAOE,GAErB,sBAAKd,UAAU,MAAf,UACK,4CAED,uBAAMkB,SAbW,SAACC,GAClBA,EAAEC,iBACFJ,QAAQC,IAAK,gBAEbI,MAAM,gCAAD,OAAiCT,KAStC,UACA,cAAC,EAAD,CAAOR,KAAK,QAASD,MAAO,SAASD,GAAG,QAAQG,MAAOO,EAAON,SAAU,SAAAa,GAAC,OAAIN,EAASM,EAAEG,OAAOjB,UAC/F,cAAC,EAAD,CAAOD,KAAK,WAAWD,MAAM,YAAYoB,GAAG,WAAWlB,MAAOS,EAAUR,SAAW,SAAAa,GAAC,OAAIJ,EAAYI,EAAEG,OAAOjB,UAC7G,cAAC,EAAD,CAAQD,KAAK,SAASK,KAAK,iBCfhBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b89d86a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\n\nconst Input = props => {\n    return (\n        <div className= \"input\"> \n        <label htmlFor={props.id}>{props.title}</label>\n        <input type={props.type} id={props.id} value={props.value} onChange={props.onChange}/>\n\n        </div>\n    )\n}\n\nexport default Input","import React from \"react\";\n\nimport \"./Button.css\"\n\nconst Button = (props) => {\n    return (\n        <button type={props.type || \"button\"} className=\"button\" onClick={props.onClick}>\n            {props.name}\n        </button>\n    )\n}\n\nexport default Button;","import React, {useState} from \"react\"\nimport logo from './logo.svg';\nimport './App.css';\nimport Input from \"./components/input/Input\";\nimport Button from \"./components/Button/Button\"\n\n\nfunction App() {\n  const [email, setEmail] = useState (\"\")\n  const [password, setPassword] = useState (\"\")\n\n  const submitForm = (e) => {\n    e.preventDefault()\n    console.log (\"FORSUBMITTED\")\n\n    alert(`Registered successfully with ${email}`)\n\n  }\n\n  console.log(email, password)\n  return (\n<div className=\"App\">\n     <h1>Login Form</h1>\n\n    <form onSubmit= {submitForm}>\n    <Input type=\"email\"  title= \"Email:\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\n    <Input type=\"password\" title=\"Password:\" is=\"password\" value={password} onChange={ e => setPassword(e.target.value)}/>\n    <Button type=\"submit\" name=\"login\"/>\n    </form>\n\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}